'use client';

import { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { useRouter } from 'next/navigation';
import Link from 'next/link';

interface VerificationDocuments {
  id: string;
  passport: File | null;
  diploma: File | null;
  certificates: File[];
  portfolio: File[];
  businessLicense: File | null;
  insurance: File | null;
}

export default function VerificationPage() {
  const { user } = useAuth();
  const router = useRouter();
  
  const [documents, setDocuments] = useState<VerificationDocuments>({
    id: user?.id || '',
    passport: null,
    diploma: null,
    certificates: [],
    portfolio: [],
    businessLicense: null,
    insurance: null
  });

  const [uploadStatus, setUploadStatus] = useState<{ [key: string]: 'uploading' | 'success' | 'error' }>({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –Ω–µ –º–∞—Å—Ç–µ—Ä
  if (!user || user.type !== 'MASTER') {
    router.push('/');
    return null;
  }

  const handleFileUpload = (field: keyof VerificationDocuments, file: File | null) => {
    setDocuments(prev => ({
      ...prev,
      [field]: file
    }));
    
    if (file) {
      setUploadStatus(prev => ({
        ...prev,
        [field]: 'uploading'
      }));
      
      // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
      setTimeout(() => {
        setUploadStatus(prev => ({
          ...prev,
          [field]: 'success'
        }));
      }, 1000);
    }
  };

  const handleMultipleFileUpload = (field: 'certificates' | 'portfolio', files: FileList | null) => {
    if (!files) return;
    
    const fileArray = Array.from(files);
    setDocuments(prev => ({
      ...prev,
      [field]: [...prev[field], ...fileArray]
    }));
    
    setUploadStatus(prev => ({
      ...prev,
      [field]: 'uploading'
    }));
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
      setUploadStatus(prev => ({
        ...prev,
        [field]: 'success'
      }));
    }, 1000);
  };

  const handleSubmit = async () => {
    setIsSubmitting(true);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const requiredFields: (keyof VerificationDocuments)[] = ['passport', 'diploma'];
    const missingFields = requiredFields.filter(field => !documents[field]);
    
    if (missingFields.length > 0) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã');
      setIsSubmitting(false);
      return;
    }
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    setTimeout(() => {
      alert('–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é! –û–∂–∏–¥–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.');
      setIsSubmitting(false);
      router.push('/master-dashboard');
    }, 2000);
  };

  const getUploadStatusIcon = (field: string) => {
    const status = uploadStatus[field];
    switch (status) {
      case 'uploading':
        return '‚è≥';
      case 'success':
        return '‚úÖ';
      case 'error':
        return '‚ùå';
      default:
        return 'üìÑ';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-purple-900">
      {/* Header */}
      <header className="bg-purple-900/50 backdrop-blur-sm border-b border-purple-700/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <Link href="/" className="flex items-center space-x-2">
              <div className="w-6 h-6 bg-[#FF6B6B] rounded-lg flex items-center justify-center">
                <svg className="w-4 h-4 text-white" viewBox="0 0 100 100" fill="currentColor">
                  <path d="M50 10L61.8 38.2L90 50L61.8 61.8L50 90L38.2 61.8L10 50L38.2 38.2L50 10Z" />
                </svg>
              </div>
              <span className="text-white text-xl font-bold">Glowly</span>
            </Link>
            
            <Link href="/master-dashboard" className="bg-yellow-400 text-purple-900 px-4 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors">
              –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç
            </Link>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 sm:p-8 border border-white/20">
          <div className="text-center mb-8">
            <h1 className="text-3xl sm:text-4xl font-bold text-white mb-4">
              –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –º–∞–π—Å—Ç—Ä–∞
            </h1>
            <p className="text-purple-200 text-lg">
              –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∞—à–æ—ó –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó
            </p>
          </div>

          {/* Verification Steps */}
          <div className="mb-8">
            <div className="flex items-center justify-center space-x-4 mb-6">
              <div className="flex items-center">
                <div className="w-8 h-8 bg-purple-600 text-white rounded-full flex items-center justify-center text-sm font-bold">
                  1
                </div>
                <span className="ml-2 text-white text-sm">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</span>
              </div>
              <div className="w-8 h-0.5 bg-white/30"></div>
              <div className="flex items-center">
                <div className="w-8 h-8 bg-white/20 text-white/60 rounded-full flex items-center justify-center text-sm font-bold">
                  2
                </div>
                <span className="ml-2 text-white/60 text-sm">–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞</span>
              </div>
              <div className="w-8 h-0.5 bg-white/30"></div>
              <div className="flex items-center">
                <div className="w-8 h-8 bg-white/20 text-white/60 rounded-full flex items-center justify-center text-sm font-bold">
                  3
                </div>
                <span className="ml-2 text-white/60 text-sm">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</span>
              </div>
            </div>
          </div>

          {/* Documents Upload */}
          <div className="space-y-6">
            {/* Passport */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üìÑ –ü–∞—Å–ø–æ—Ä—Ç –∞–±–æ ID-–∫–∞—Ä—Ç–∞ <span className="text-red-400">*</span>
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –∞–±–æ ID-–∫–∞—Ä—Ç–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Å–æ–±–∏
              </p>
              <input
                type="file"
                accept="image/*"
                onChange={(e) => handleFileUpload('passport', e.target.files?.[0] || null)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.passport && (
                <div className="mt-2 flex items-center text-green-400">
                  <span className="mr-2">{getUploadStatusIcon('passport')}</span>
                  <span className="text-sm">{documents.passport.name}</span>
                </div>
              )}
            </div>

            {/* Diploma */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üéì –î–∏–ø–ª–æ–º –∞–±–æ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç <span className="text-red-400">*</span>
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∏–ø–ª–æ–º –ø—Ä–æ –æ—Å–≤—ñ—Ç—É –∞–±–æ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –ø—Ä–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫—É—Ä—Å—ñ–≤
              </p>
              <input
                type="file"
                accept="image/*,.pdf"
                onChange={(e) => handleFileUpload('diploma', e.target.files?.[0] || null)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.diploma && (
                <div className="mt-2 flex items-center text-green-400">
                  <span className="mr-2">{getUploadStatusIcon('diploma')}</span>
                  <span className="text-sm">{documents.diploma.name}</span>
                </div>
              )}
            </div>

            {/* Certificates */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üèÜ –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∏ (–¥–æ 5 —Ñ–∞–π–ª—ñ–≤)
              </p>
              <input
                type="file"
                accept="image/*,.pdf"
                multiple
                onChange={(e) => handleMultipleFileUpload('certificates', e.target.files)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.certificates.length > 0 && (
                <div className="mt-2">
                  {documents.certificates.map((file, index) => (
                    <div key={index} className="flex items-center text-green-400 mb-1">
                      <span className="mr-2">{getUploadStatusIcon('certificates')}</span>
                      <span className="text-sm">{file.name}</span>
                    </div>
                  ))}
                </div>
              )}
            </div>

            {/* Portfolio */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üé® –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Ä–æ–±—ñ—Ç
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö —Ä–æ–±—ñ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –Ω–∞–≤–∏—á–æ–∫ (–¥–æ 10 —Ñ–∞–π–ª—ñ–≤)
              </p>
              <input
                type="file"
                accept="image/*"
                multiple
                onChange={(e) => handleMultipleFileUpload('portfolio', e.target.files)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.portfolio.length > 0 && (
                <div className="mt-2">
                  {documents.portfolio.map((file, index) => (
                    <div key={index} className="flex items-center text-green-400 mb-1">
                      <span className="mr-2">{getUploadStatusIcon('portfolio')}</span>
                      <span className="text-sm">{file.name}</span>
                    </div>
                  ))}
                </div>
              )}
            </div>

            {/* Business License */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üè¢ –°–≤—ñ–¥–æ—Ü—Ç–≤–æ –ø—Ä–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –§–û–ü/–¢–û–í
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –±—ñ–∑–Ω–µ—Å—É (—è–∫—â–æ —î)
              </p>
              <input
                type="file"
                accept="image/*,.pdf"
                onChange={(e) => handleFileUpload('businessLicense', e.target.files?.[0] || null)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.businessLicense && (
                <div className="mt-2 flex items-center text-green-400">
                  <span className="mr-2">{getUploadStatusIcon('businessLicense')}</span>
                  <span className="text-sm">{documents.businessLicense.name}</span>
                </div>
              )}
            </div>

            {/* Insurance */}
            <div className="bg-white/5 rounded-lg p-4">
              <label className="block text-white font-semibold mb-2">
                üõ°Ô∏è –°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è
              </label>
              <p className="text-purple-200 text-sm mb-3">
                –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –ø–æ–ª—ñ—Å —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ (—è–∫—â–æ —î)
              </p>
              <input
                type="file"
                accept="image/*,.pdf"
                onChange={(e) => handleFileUpload('insurance', e.target.files?.[0] || null)}
                className="w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-purple-900 file:bg-white file:font-medium"
              />
              {documents.insurance && (
                <div className="mt-2 flex items-center text-green-400">
                  <span className="mr-2">{getUploadStatusIcon('insurance')}</span>
                  <span className="text-sm">{documents.insurance.name}</span>
                </div>
              )}
            </div>
          </div>

          {/* Submit Button */}
          <div className="mt-8 text-center">
            <button
              onClick={handleSubmit}
              disabled={isSubmitting}
              className="bg-purple-600 text-white px-8 py-3 rounded-lg font-medium hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              {isSubmitting ? '–í—ñ–¥–ø—Ä–∞–≤–∫–∞...' : '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é'}
            </button>
          </div>

          {/* Info */}
          <div className="mt-6 text-center">
            <p className="text-purple-200 text-sm">
              <span className="text-red-400">*</span> - –æ–±–æ–≤&apos;—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
            </p>
            <p className="text-purple-200 text-xs mt-2">
              –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∑–∞–π–º–∞—î 1-3 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ. –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
